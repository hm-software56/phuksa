<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "home".
 *
 * @property integer $id
 * @property string $photo
 * @property string $title
 * @property string $details
 * @property string $type
 * @property integer $user_id
 *
 * @property \app\models\User $user
 * @property string $aliasModel
 */
abstract class Home extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const TYPE_SLIDE = 'Slide';
    const TYPE_BOX = 'Box';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'home';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['photo', 'title', 'details', 'type', 'user_id'], 'required'],
            [['details', 'type'], 'string'],
            [['user_id'], 'integer'],
            [['photo'], 'string', 'max' => 45],
            [['title'], 'string', 'max' => 255],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['user_id' => 'id']],
            ['type', 'in', 'range' => [
                    self::TYPE_SLIDE,
                    self::TYPE_BOX,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'photo' => Yii::t('app', 'Photo'),
            'title' => Yii::t('app', 'Title'),
            'details' => Yii::t('app', 'Details'),
            'type' => Yii::t('app', 'Type'),
            'user_id' => Yii::t('app', 'User ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'user_id']);
    }




    /**
     * get column type enum value label
     * @param string $value
     * @return string
     */
    public static function getTypeValueLabel($value){
        $labels = self::optsType();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column type ENUM value labels
     * @return array
     */
    public static function optsType()
    {
        return [
            self::TYPE_SLIDE => Yii::t('app', 'Slide'),
            self::TYPE_BOX => Yii::t('app', 'Box'),
        ];
    }

}
