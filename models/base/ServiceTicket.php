<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "service_ticket".
 *
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property double $price
 * @property string $date
 * @property string $remark
 * @property integer $user_id
 *
 * @property \app\models\OrderTicket[] $orderTickets
 * @property \app\models\User $user
 * @property string $aliasModel
 */
abstract class ServiceTicket extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'service_ticket';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['code', 'price', 'date', 'remark', 'user_id'], 'required'],
            [['price'], 'number'],
            [['date'], 'safe'],
            [['remark'], 'string'],
            [['user_id'], 'integer'],
            [['code'], 'string', 'max' => 255],
            [['name'], 'string', 'max' => 45],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['user_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'code' => Yii::t('app', 'Code'),
            'name' => Yii::t('app', 'Name'),
            'price' => Yii::t('app', 'Price'),
            'date' => Yii::t('app', 'Date'),
            'remark' => Yii::t('app', 'Remark'),
            'user_id' => Yii::t('app', 'User ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOrderTickets()
    {
        return $this->hasMany(\app\models\OrderTicket::className(), ['service_ticket_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'user_id']);
    }




}
