<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "item_order".
 *
 * @property integer $id
 * @property string $product_name
 * @property double $price
 * @property integer $quatity
 * @property string $unit
 * @property integer $product_id
 * @property integer $product_order_id
 *
 * @property \app\models\ProductOrder $productOrder
 * @property \app\models\Product $product
 * @property string $aliasModel
 */
abstract class ItemOrder extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'item_order';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['price'], 'number'],
            [['quatity', 'unit', 'product_id', 'product_order_id'], 'required'],
            [['quatity', 'product_id', 'product_order_id'], 'integer'],
            [['product_name'], 'string', 'max' => 255],
            [['unit'], 'string', 'max' => 100],
            [['product_order_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\ProductOrder::className(), 'targetAttribute' => ['product_order_id' => 'id']],
            [['product_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Product::className(), 'targetAttribute' => ['product_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'product_name' => Yii::t('app', 'Product Name'),
            'price' => Yii::t('app', 'Price'),
            'quatity' => Yii::t('app', 'Quatity'),
            'unit' => Yii::t('app', 'Unit'),
            'product_id' => Yii::t('app', 'Product ID'),
            'product_order_id' => Yii::t('app', 'Product Order ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductOrder()
    {
        return $this->hasOne(\app\models\ProductOrder::className(), ['id' => 'product_order_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProduct()
    {
        return $this->hasOne(\app\models\Product::className(), ['id' => 'product_id']);
    }




}
